@using Microsoft.AspNetCore.Authorization
@using ChatApp.Shared.Models
@using ChatApp.Client.Services
@using ChatApp.Client.Models
@using Oniqys.Blazor.ViewModel
@using ChatApp.Client.ViewModel;
@inject NavigationManager NavigationManager
@inject IHttpClientFactory IHttpClientFactory
@inject IRoomManager RoomManager
@attribute [Authorize]
@page "/"

<style type="text/css">
    .margin {
        margin: 2px;
    }

    .margin8 {
        margin: 8px;
    }
</style>

<div>
    <AuthorizeView>
        <Authorized>
            <div class="margin8">
                @{
                    userEmail = context.User.Identity.Name;
                    indexViewModel.IsLoggedIn = true;
                }
                @if (indexViewModel?.Rooms is null)
                {
                    <div>ルームを読み取り中…</div>
                }
                else if (indexViewModel.Rooms.Count == 0)
                {
                }
                else
                {
                    <nav class="navbar navbar-dark bg-dark">
                        <span class="navbar-brand mb-0 h1 text-white-50">チャットルームを選択してください</span>
                    </nav>
                    <div class="d-flex flex-wrap">
                        @foreach (var room in indexViewModel.Rooms)
                        {
                            <NavLink class="btn btn-secondary margin8" href=@("chat/" + room.RoomId)>
                                <span class="oi oi-document" aria-hidden="true"></span>@room.RoomName
                            </NavLink>
                        }
                    </div>
                }
                <hr />

                <div class="d-flex flex-wrap">
                    <input class="margin8" type="text" @bind="newRoomName" />
                    <button class="btn btn-primary" @onclick="() => indexViewModel.CreateRoomAsync(newRoomName,new List<string> { userEmail })">新規ルーム作成</button>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    private bool CanCareateNewRoom => !string.IsNullOrWhiteSpace(newRoomName);

    private string newRoomName = string.Empty;

    private string userEmail;

    [CascadingParameter]
    protected IndexViewModel indexViewModel { get; set; }

}